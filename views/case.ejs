<!DOCTYPE html>
<html>
<style>
    body {
        font-family: Arial, Helvetica, sans-serif;
    }
    
    * {
        box-sizing: border-box;
    }
    /* Full-width input fields */
    
    input[type=text],
    input[type=number],
    input[type=password],
    textarea {
        width: 100%;
        padding: 15px;
        margin: 5px 0 22px 0;
        display: inline-block;
        border: none;
        background: #f1f1f1;
    }
    /* Add a background color when the inputs get focus */
    
    input[type=text]:focus,
    input[type=number]:focus,
    input[type=password]:focus,
    textarea {
        background-color: #ddd;
        outline: none;
    }
    /* Set a style for all buttons */
    
    button {
        background-color: #4CAF50;
        color: white;
        padding: 14px 20px;
        margin: 8px 0;
        border: none;
        cursor: pointer;
        width: 100%;
        opacity: 0.9;
    }
    
    button:hover {
        opacity: 1;
    }
    /* Extra styles for the cancel button */
    
    .cancelbtn {
        padding: 14px 20px;
        background-color: #f44336;
    }
    /* Float cancel and signup buttons and add an equal width */
    
    .cancelbtn,
    .signupbtn {
        float: left;
        width: 50%;
    }
    /* Add padding to container elements */
    
    .container {
        padding: 16px;
    }
    /* The Modal (background) */
    
    .modal {
        display: none;
        /* Hidden by default */
        position: fixed;
        /* Stay in place */
        z-index: 1;
        /* Sit on top */
        left: 0;
        top: 0;
        width: 100%;
        /* Full width */
        height: 100%;
        /* Full height */
        overflow: auto;
        /* Enable scroll if needed */
        background-color: #474e5d;
        padding-top: 50px;
    }
    /* Modal Content/Box */
    
    .modal-content {
        background-color: #fefefe;
        margin: 5% auto 15% auto;
        /* 5% from the top, 15% from the bottom and centered */
        border: 1px solid #888;
        width: 80%;
        /* Could be more or less, depending on screen size */
    }
    /* Style the horizontal ruler */
    
    hr {
        border: 1px solid #f1f1f1;
        margin-bottom: 25px;
    }
    /* The Close Button (x) */
    
    .close {
        position: absolute;
        right: 35px;
        top: 15px;
        font-size: 40px;
        font-weight: bold;
        color: #f1f1f1;
    }
    
    .close:hover,
    .close:focus {
        color: #f44336;
        cursor: pointer;
    }
    /* Clear floats */
    
    .clearfix::after {
        content: "";
        clear: both;
        display: table;
    }
    /* Change styles for cancel button and signup button on extra small screens */
    
    @media screen and (max-width: 300px) {
        .cancelbtn,
        .signupbtn {
            width: 100%;
        }
    }
</style>
<!--  ----------------------------------------------------------------------  -->
<!--  NOTE: Please add the following <META> element to your page <HEAD>.      -->
<!--  If necessary, please modify the charset parameter to specify the        -->
<!--  character set of your HTML page.                                        -->
<!--  ----------------------------------------------------------------------  -->

<body>

    <h2>Modal Signup Form</h2>

    <button onclick="document.getElementById('id01').style.display='block'" style="width:auto;">Issue?</button>
    <br>

    <META HTTP-EQUIV="Content-type" CONTENT="text/html; charset=UTF-8">

    <!--  ----------------------------------------------------------------------  -->
    <!--  NOTE: Please add the following <FORM> element to your page.             -->
    <!--  ----------------------------------------------------------------------  -->
    <div id="id01" class="modal">
        <span onclick="document.getElementById('id01').style.display='none'" class="close" title="Close Modal">&times;</span>
        <form action="https://webto.salesforce.com/servlet/servlet.WebToCase?encoding=UTF-8" class="modal-content" method="POST">
            <div class="container">
                <h1>Create Case</h1>
                <p>Please fill in this form to submit your issue.</p>
                <hr>
                <input type=hidden name="orgid" value="00D6F000001bWLD">
                <input type=hidden name="retURL" value="http://casesubmit">

                <!--  ----------------------------------------------------------------------  -->
                <!--  NOTE: These fields are optional debugging elements. Please uncomment    -->
                <!--  these lines if you wish to test in debug mode.                          -->
                <!--  <input type="hidden" name="debug" value=1>                              -->
                <!--  <input type="hidden" name="debugEmail" value="ps8032872@gmail.com">     -->
                <!--  ----------------------------------------------------------------------  -->

                <label for="name">Contact Name</label><input id="name" maxlength="80" name="name" size="20" type="text" /><br>

                <label for="email">Email</label><input id="email" maxlength="80" name="email" size="20" type="text" /><br>

                <label for="phone">Phone</label><input id="phone" maxlength="40" name="phone" size="20" type="text" /><br>

                <label for="subject">Subject</label><input id="subject" maxlength="80" name="subject" size="20" type="text" /><br>

                <label for="description">Description</label><textarea name="description"></textarea><br>

                <input type="hidden" id="external" name="external" value="1" /><br>

                <div class="clearfix">
                    <button type="submit" class="signupbtn" name="submit">Submit</button>
                </div>
            </div>
        </form>
    </div>


    <style type='text/css'>
        .embeddedServiceHelpButton .helpButton .uiButton {
            background-color: #005290;
            font-family: "Salesforce Sans", sans-serif;
        }
        
        .embeddedServiceHelpButton .helpButton .uiButton:focus {
            outline: 1px solid #005290;
        }
        
        @font-face {
            font-family: 'Salesforce Sans';
            src: url('https://www.sfdcstatic.com/system/shared/common/assets/fonts/SalesforceSans/SalesforceSans-Regular.woff') format('woff'), url('https://www.sfdcstatic.com/system/shared/common/assets/fonts/SalesforceSans/SalesforceSans-Regular.ttf') format('truetype');
        }
    </style>
    <div id='acceptInvite'>Test</div>
    <div id='acceptInvite'>Test</div>
    <!-- Start of Invitations -->
    <div class="embeddedServiceInvitation" id="snapins_invite" inert aria-live="assertive" role="dialog" aria-atomic="true">
        <div class="embeddedServiceInvitationHeader" aria-labelledby="snapins_titletext" aria-describedby="snapins_bodytext">
            <img id="embeddedServiceAvatar">
            <span class="embeddedServiceTitleText" id="snapins_titletext">Need help?</span>
            <button type="button" id="closeInvite" class="embeddedServiceCloseIcon" aria-label="Exit invitation">&times;</button>
        </div>
        <div class="embeddedServiceInvitationBody">
            <p id="snapins_bodytext">How can we help you?</p>
        </div>
        <div class="embeddedServiceInvitationFooter" aria-describedby="snapins_bodytext">
            <button type="button" class="embeddedServiceActionButton" id="rejectInvite">Close</button>
            <button type="button" class="embeddedServiceActionButton" id="acceptInvite">Start Chat</button>
        </div>
    </div>

    <style type='text/css'>
        #snapins_invite {
            background-color: #FFFFFF;
            font-family: "Salesforce Sans", sans-serif;
            overflow: visible;
            border-radius: 8px;
            visibility: hidden;
        }
        
        .embeddedServiceInvitation {
            background-color: transparent;
            max-width: 290px;
            max-height: 210px;
            -webkit-box-shadow: 0 7px 12px rgba(0, 0, 0, 0.28);
            -moz-box-shadow: 0 7px 12px rgba(0, 0, 0, 0.28);
            box-shadow: 0 7px 12px rgba(0, 0, 0, 0.28);
        }
        
        @media only screen and (min-width: 48em) {
            /*mobile*/
            .embeddedServiceInvitation {
                max-width: 332px;
                max-height: 210px;
            }
        }
        
        .embeddedServiceInvitation>.embeddedServiceInvitationHeader {
            width: inherit;
            height: 32px;
            line-height: 32px;
            padding: 10px;
            color: #FFFFFF;
            background-color: #222222;
            overflow: initial;
            display: flex;
            justify-content: space-between;
            align-items: stretch;
            border-top-left-radius: 8px;
            border-top-right-radius: 8px;
        }
        
        .embeddedServiceInvitationHeader #embeddedServiceAvatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
        }
        
        .embeddedServiceInvitationHeader .embeddedServiceTitleText {
            font-size: 18px;
            color: #FFFFFF;
            overflow: hidden;
            word-wrap: normal;
            white-space: nowrap;
            text-overflow: ellipsis;
            align-self: stretch;
            flex-grow: 1;
            max-width: 100%;
            margin: 0 12px;
        }
        
        .embeddedServiceInvitationHeader .embeddedServiceCloseIcon {
            border: none;
            border-radius: 3px;
            cursor: pointer;
            position: relative;
            bottom: 3%;
            background-color: transparent;
            width: 32px;
            height: 32px;
            font-size: 23px;
            color: #FFFFFF;
        }
        
        .embeddedServiceInvitationHeader .embeddedServiceCloseIcon:focus {
            outline: none;
        }
        
        .embeddedServiceInvitationHeader .embeddedServiceCloseIcon:focus::before {
            content: " ";
            position: absolute;
            top: 11%;
            left: 7%;
            width: 85%;
            height: 85%;
            background-color: rgba(255, 255, 255, 0.2);
            border-radius: 4px;
            pointer-events: none;
        }
        
        .embeddedServiceInvitationHeader .embeddedServiceCloseIcon:active,
        .embeddedServiceCloseIcon:hover {
            background-color: #FFFFFF;
            color: rgba(0, 0, 0, 0.7);
            opacity: 0.7;
        }
        
        .embeddedServiceInvitation>.embeddedServiceInvitationBody {
            background-color: #FFFFFF;
            max-height: 110px;
            min-width: 260px;
            margin: 0 8px;
            font-size: 14px;
            line-height: 20px;
            overflow: auto;
        }
        
        .embeddedServiceInvitationBody p {
            color: #333333;
            padding: 8px;
            margin: 12px 0;
        }
        
        .embeddedServiceInvitation>.embeddedServiceInvitationFooter {
            width: inherit;
            color: #FFFFFF;
            text-align: right;
            background-color: #FFFFFF;
            padding: 10px;
            max-height: 50px;
            border-bottom-left-radius: 8px;
            border-bottom-right-radius: 8px;
        }
        
        .embeddedServiceInvitationFooter>.embeddedServiceActionButton {
            font-size: 14px;
            max-height: 40px;
            border: none;
            border-radius: 4px;
            padding: 10px;
            margin: 4px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            cursor: pointer;
        }
        
        .embeddedServiceInvitationFooter>#acceptInvite {
            background-color: #005290;
            color: #FFFFFF;
        }
        
        .embeddedServiceInvitationFooter>#rejectInvite {
            background-color: #FFFFFF;
            color: #005290;
        }
    </style>

    <script type='text/javascript'>
        (function() {
            document.getElementById('closeInvite').onclick = function() {
                embedded_svc.inviteAPI.inviteButton.rejectInvite();
            };
            document.getElementById('rejectInvite').onclick = function() {
                embedded_svc.inviteAPI.inviteButton.rejectInvite();
            }; // use this API call to reject invitations
            document.getElementById('acceptInvite').onclick = function() {
                embedded_svc.inviteAPI.inviteButton.acceptInvite();
            }; // use this API call to start chat from invitations
            document.addEventListener('keyup', function(event) {
                if (event.keyCode == 27) {
                    embedded_svc.inviteAPI.inviteButton.rejectInvite();
                }
            })
        })();
    </script>
    <!-- End of Invitations -->

    <script type='text/javascript' src='https://service.force.com/embeddedservice/5.0/esw.min.js'></script>
    <script type='text/javascript'>
        var url = window.location.href;
        console.log(url);
        var initESW = function(gslbBaseURL) {
            embedded_svc.settings.displayHelpButton = true; //Or false
            embedded_svc.settings.language = ''; //For example, enter 'en' or 'en-US'

            //embedded_svc.settings.defaultMinimizedText = '...'; //(Defaults to Chat with an Expert)
            //embedded_svc.settings.disabledMinimizedText = '...'; //(Defaults to Agent Offline)

            //embedded_svc.settings.loadingText = ''; //(Defaults to Loading)
            embedded_svc.settings.storageDomain = 'damp-hollows-26130.herokuapp.com'; //(Sets the domain for your deployment so that visitors can navigate subdomains during a chat session)

            // Settings for Live Agent
            //embedded_svc.settings.directToButtonRouting = function(prechatFormData) {
            // Dynamically changes the button ID based on what the visitor enters in the pre-chat form.
            // Returns a valid button ID.
            //};
            //embedded_svc.settings.prepopulatedPrechatFields = {}; //Sets the auto-population of pre-chat form fields
            //embedded_svc.settings.fallbackRouting = []; //An array of button IDs, user IDs, or userId_buttonId
            //embedded_svc.settings.offlineSupportMinimizedText = '...'; //(Defaults to Contact Us)

            embedded_svc.settings.enabledFeatures = ['LiveAgent'];
            embedded_svc.settings.entryFeature = 'LiveAgent';
            embedded_svc.settings.extraPrechatFormDetails = [{
                "label": "Url",
                "value": url,
                "displayToAgent": true,
                "transcriptFields": ["Url__c"]
            }];

            embedded_svc.init(
                'https://pin--dev.my.salesforce.com',
                'https://dev-pin.cs106.force.com/partners',
                gslbBaseURL,
                '00D0D0000008gc3',
                'Chat_Agents', {
                    baseLiveAgentContentURL: 'https://c.la1-c1cs-cdg.salesforceliveagent.com/content',
                    deploymentId: '5721t000000PSB2',
                    buttonId: '5730D0000008OS0',
                    baseLiveAgentURL: 'https://d.la1-c1cs-cdg.salesforceliveagent.com/chat',
                    eswLiveAgentDevName: 'Chat_Agents',
                    isOfflineSupportEnabled: false
                }
            );
        };

        if (!window.embedded_svc) {
            var s = document.createElement('script');
            s.setAttribute('src', 'https://pin--dev.my.salesforce.com/embeddedservice/5.0/esw.min.js');
            s.onload = function() {
                initESW(null);
            };
            document.body.appendChild(s);
        } else {
            initESW('https://service.force.com');
        }
    </script>
</body>